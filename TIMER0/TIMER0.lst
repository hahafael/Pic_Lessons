;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/12/2018 00:25:42
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF16  	GOTO        44
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x001C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x001E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0022	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0024	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0026	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0028	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x002A	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x002C	0x6A15      	CLRF        _cont 
0x002E	0x6A16      	CLRF        22 
;TIMER0.c,2 :: 		void main() {
;TIMER0.c,4 :: 		TRISB = 0x00; //PORTB = saídas
0x0030	0x6A93      	CLRF        TRISB 
;TIMER0.c,5 :: 		LATB  = 0x00;
0x0032	0x6A8A      	CLRF        LATB 
;TIMER0.c,6 :: 		ADCON1 = 0x0F; //entradas e saídas digitais
0x0034	0x0E0F      	MOVLW       15
0x0036	0x6EC1      	MOVWF       ADCON1 
;TIMER0.c,7 :: 		TMR0H =  0x85;
0x0038	0x0E85      	MOVLW       133
0x003A	0x6ED7      	MOVWF       TMR0H 
;TIMER0.c,8 :: 		TMR0L =  0xEE;
0x003C	0x0EEE      	MOVLW       238
0x003E	0x6ED6      	MOVWF       TMR0L 
;TIMER0.c,9 :: 		T0CON =  0x84; //Liga TMR0 no modo de 16 bits e prescaler 1:32
0x0040	0x0E84      	MOVLW       132
0x0042	0x6ED5      	MOVWF       T0CON 
;TIMER0.c,16 :: 		while(1){
L_main0:
;TIMER0.c,17 :: 		if(TMR0IF_bit){
0x0044	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x0046	0xD010      	BRA         L_main2
;TIMER0.c,18 :: 		cont++;
0x0048	0x4A15      	INFSNZ      _cont, 1 
0x004A	0x2A16      	INCF        _cont+1, 1 
;TIMER0.c,19 :: 		TMR0IF_bit = 0;
0x004C	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;TIMER0.c,20 :: 		TMR0H = 0x85;
0x004E	0x0E85      	MOVLW       133
0x0050	0x6ED7      	MOVWF       TMR0H 
;TIMER0.c,21 :: 		TMR0L = 0xEE;
0x0052	0x0EEE      	MOVLW       238
0x0054	0x6ED6      	MOVWF       TMR0L 
;TIMER0.c,22 :: 		if(cont == 4){
0x0056	0x0E00      	MOVLW       0
0x0058	0x1816      	XORWF       _cont+1, 0 
0x005A	0xE102      	BNZ         L__main5
0x005C	0x0E04      	MOVLW       4
0x005E	0x1815      	XORWF       _cont, 0 
L__main5:
0x0060	0xE103      	BNZ         L_main3
;TIMER0.c,23 :: 		LATB3_bit = ~LATB3_BIT;
0x0062	0x768A      	BTG         LATB3_bit, BitPos(LATB3_bit+0) 
;TIMER0.c,24 :: 		cont = 0;
0x0064	0x6A15      	CLRF        _cont 
0x0066	0x6A16      	CLRF        _cont+1 
;TIMER0.c,25 :: 		}
L_main3:
;TIMER0.c,27 :: 		}
L_main2:
;TIMER0.c,28 :: 		}
0x0068	0xD7ED      	BRA         L_main0
;TIMER0.c,29 :: 		}
L_end_main:
0x006A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [16]    ___CC2DW
0x002C      [64]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _cont
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB3_bit
0x0F93       [1]    TRISB
0x0FC1       [1]    ADCON1
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    TMR0IF_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
